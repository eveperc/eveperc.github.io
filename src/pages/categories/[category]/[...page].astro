---
import Layout from "../../../layouts/Layout.astro";
import { Breadcrumbs } from "../../../components/Breadcrumbs";
import { MyContent } from "../../../components/Content";
import { MyLowContent } from "../../../components/LowContent";
import { newtClient } from "../../../lib/newt";
import type { Article } from "../../../lib/newt";
import type { GetStaticPathsOptions } from "astro";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const { items: categoryData } = await newtClient.getContents<Article>({
    appUid: "blog",
    modelUid: "article",
    query: {
      select: ["category"],
    },
  });
  const categoryContents = categoryData;
  const { items: articles } = await newtClient.getContents<Article>({
    appUid: "blog",
    modelUid: "article",
    query: {
      select: ["title", "slug", "category", "coverImage", "updatedAt"],
    },
  });
  return categoryContents.map((categoryContent: Article) => {
    const postsContents: Article[] = articles.filter(
      (item: Article) => item.category.slug === categoryContent.category.slug
    );
    return paginate(postsContents, {
      params: {
        category: categoryContent.category.slug,
      },
      pageSize: 9,
    });
  });
};

const { category } = Astro.params;
const { page } = Astro.props;
const data: Article[] = page.data;
---

<Layout id="category" title="NeoEveLog" description={category ? category : ""}>
  <Breadcrumbs title={category? category:""}/>
  <MyContent articles={data} />
  <MyLowContent>
    <h1>{page.currentPage}ページ</h1>
    {page.url.prev ? <a href={page.url.prev}>Previous</a> : null}
    {page.url.next ? <a href={page.url.next}>Next</a> : null}
  </MyLowContent>
</Layout>
