---
import type { GetStaticPathsOptions } from "astro";
import type { PostItem } from "@lib/newt";

import Layout from "@layouts/Layout.astro";
import ArticlesWrapper from "@components/ArticleCard/ArticlesWrapper.astro";
import Article from "@components/ArticleCard/Article";
import Pagination from "@components/Pagination/Pagination.astro";
import Categories from "@components/Categries/Categories.astro";
import { categoryContent } from "@lib/category";

import { getCategories, getContents } from "@lib/newtClient";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const categoryData = await getCategories();
  const articles = await getContents();

  return categoryData.map((categoryContent: PostItem) => {
    const postsContents: PostItem[] = articles.filter(
      (item: PostItem) => item.category.slug === categoryContent.category.slug
    );
    return paginate(postsContents, {
      params: {
        category: categoryContent.category.slug,
      },
      pageSize: 9,
    });
  });
};

const { category } = Astro.params;
const { page } = Astro.props;
const data: PostItem[] = page.data;
const url = import.meta.env.SITE_URL;
---

<Layout title="NeoEveLog" description={category ? category : ""}>
  <Categories url={url} data={categoryContent} category={category} />
  <ArticlesWrapper>
    {data.map((item, index) => <Article key={index} article={item} />)}
  </ArticlesWrapper>
  <Pagination page={page} />
</Layout>
